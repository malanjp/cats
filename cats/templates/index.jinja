{#
<html>
  <head>
    <title>test cats websocket</title>
    <script type='application/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js'></script>
    <script type='application/javascript'>
      $(document).ready(function() {

        websocket = 'ws://{{host}}:{{port}}/';
        if (window.WebSocket) {
          console.log('websocket');
          ws = new WebSocket(websocket);
          console.log(ws);
        }
        else if (window.MozWebSocket) {
          console.log('mozwebsocket');
          ws = MozWebSocket(websocket);
        }
        else {
          console.log('WebSocket Not Supported');
          return;
        }

        window.onbeforeunload = function(e) {
          $('#chat').val($('#chat').val() + 'Bye bye...\n');
          ws.close(1000, 'user{{username}} left the room');

          if(!e) e = window.event;
          e.stopPropagation();
          e.preventDefault();
        };
        ws.onmessage = function (evt) {
          $('#chat').val($('#chat').val() + evt.data + '\n');
        };
        ws.onopen = function() {
          ws.send("user{{username}} entered the room");
        };
        ws.onclose = function(evt) {
          console.log('closed');
          $('#chat').val($('#chat').val() + 'Connection closed by server: ' + evt.code + ' \"' + evt.reason + '\"\n');
        };

        $('#send').click(function() {
          console.log($('#message').val());
          ws.send('user{{username}}: ' + $('#message').val());
          $('#message').val("");
          return false;
        });
      });
    </script>
  </head>
  <body>
    <form action='#' id='chatform' method='get'>
      <textarea id='chat' cols='35' rows='10'></textarea>
      <br />
      <label for='message'>user{{username}}: </label><input type='text' id='message' />
      <input id='send' type='submit' value='Send' />
    </form>
  </body>
</html>
#}


<!DOCTYPE html>
<html>
  <head>
    <link href="/static/css/style.css" rel="stylesheet">
    <script type="text/javascript" src="/static/jquery-1.6.1.min.js"></script>
    <script type="text/javascript" src="/static/socket.io.js"></script>
    <script>

WEB_SOCKET_SWF_LOCATION = "/static/WebSocketMain.swf";
WEB_SOCKET_DEBUG = true;

// socket.io specific code
var socket = io.connect();

$(window).bind("beforeunload", function() {
    socket.disconnect();
});

socket.on('connect', function () {
    $('#chat').addClass('connected');
});

socket.on('announcement', function (msg) {
    $('#lines').append($('<p>').append($('<em>').text(msg)));
});

socket.on('nicknames', function (nicknames) {
    $('#nicknames').empty().append($('<span>Online: </span>'));
    for (var i in nicknames) {
    $('#nicknames').append($('<b>').text(nicknames[i]));
    }
});

socket.on('msg_to_room', message);

socket.on('reconnect', function () {
    $('#lines').remove();
    message('System', 'Reconnected to the server');
});

socket.on('reconnecting', function () {
    message('System', 'Attempting to re-connect to the server');
});

socket.on('error', function (e) {
    message('System', e ? e : 'A unknown error occurred');
});

function message (from, msg) {
    $('#lines').append($('<p>').append($('<b>').text(from), msg));
}

// DOM manipulation
$(function () {
    $('#set-nickname').submit(function (ev) {
        socket.emit('nickname', $('#nick').val(), function (set) {
            if (!set) {
                clear();
                return $('#chat').addClass('nickname-set');
            }
            $('#nickname-err').css('visibility', 'visible');
        });
        return false;
    });

    $('#send-message').submit(function () {
      message('me', $('#message').val());
      socket.emit('user message', $('#message').val());
      clear();
      $('#lines').get(0).scrollTop = 10000000;
      return false;
    });

    function clear () {
        $('#message').val('').focus();
    };
});
    </script>
  </head>
<body>
  <div id="chat">
    <div id="nickname">
      <form id="set-nickname" class="wrap">
        <p>Please type in your nickname and press enter.</p>
        <input id="nick">
        <p id="nickname-err">Nickname already in use</p>
    </form>
    </div>
    <div id="connecting">
      <div class="wrap">Connecting to socket.io server</div>
    </div>
    <div id="messages">
      <div id="nicknames"><span>Online:</span></div>
      <div id="lines"></div>
    </div>
    <form id="send-message">
      <input id="message">
      <button>Send</button>
    </form>
  </div>
</body>
</html>
